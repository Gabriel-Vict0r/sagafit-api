// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  name         String?
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Goals        Goals[]
  Achievements Achievements[]
  Subscription Subscription[]
  Photo        Photo[]
  Workout_logs Workout_logs[]
}

model Goals {
  id          String   @id @default(cuid())
  title       String
  description String
  goalValue   Decimal
  goalType    String
  createdAt   DateTime @default(now())
  endDate     DateTime
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Achievements {
  id          String   @id @default(cuid())
  title       String
  description String
  goalValue   Decimal
  goalType    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Plan {
  id           String         @id @default(cuid())
  name         String
  description  String
  photoLimit   Int
  price        Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Subscription Subscription[]
}

model Subscription {
  id             String   @id @default(cuid())
  planId         String
  initialDate    DateTime
  expirationDate DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  plan           Plan     @relation(fields: [planId], references: [id])
}

model Photo {
  id        String   @id @default(cuid())
  title     String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Workout_logs {
  id          String   @id @default(cuid())
  exercise    String
  weightKg    Decimal
  series      Int
  repetitions Int
  trainingDay DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}
